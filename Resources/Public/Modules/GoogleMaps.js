import{d as y,e as S,g as O,h as A,n as L,o as M,p as I,q as P}from"./chunk-KAWKV3KG.js";function G(e,o){e.src=o}var j=e=>{var o,t,n,p="The Google Maps JavaScript API",s="google",b="importLibrary",w="__ib__",l=document,f=window,r=f[s]||(f[s]={}),d=r.maps||(r.maps={}),E=new Set,c=new URLSearchParams,h=()=>o||(o=new Promise(async(m,g)=>{await(t=l.createElement("script")),c.set("libraries",[...E]+"");for(n in e)c.set(n.replace(/[A-Z]/g,i=>"_"+i[0].toLowerCase()),e[n]);c.set("callback",s+".maps."+w),G(t,"https://maps.googleapis.com/maps/api/js?"+c),d[w]=m,t.onerror=()=>o=g(Error(p+" could not load.")),t.nonce=l.querySelector("script[nonce]")?.nonce||"",l.head.append(t)}));d[b]?console.warn(p+" only loads once. Ignoring:",e):d[b]=(m,...g)=>E.add(m)&&h().then(()=>d[b](m,...g))};var B=e=>`The setOptions() function should only be called once. The options passed to the additional call (${JSON.stringify(e)}) will be ignored.`,J=e=>`The google.maps.importLibrary() function is already defined, and @googlemaps/js-api-loader will use the existing function instead of overwriting it. The options passed to setOptions (${JSON.stringify(e)}) will be ignored.`,V="No options were set before calling importLibrary. Make sure to configure the loader using setOptions().";var T=()=>{},U=()=>{};var _=!1;function D(e){if(_){T(B(e));return}W(e),_=!0}async function k(e){if(_||T(V),!window?.google?.maps?.importLibrary)throw new Error("google.maps.importLibrary is not installed.");return await google.maps.importLibrary(e)}function W(e){let o=!!window.google?.maps?.importLibrary;o&&U(J(e)),o||j(e)}var N="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";var R=(e=21)=>{let o="",t=crypto.getRandomValues(new Uint8Array(e|=0));for(;e--;)o+=N[t[e]&63];return o};var $=[],a=null;function K({element:e,service:o}){a||(a=window.google.maps);let t=O(e),n=[],p=S(e),s=p.length,b=JSON.parse(e.dataset?.center||null),w=o.options?.enableDirections||!1,l=I(o.options?.mapOptions||{}),f=parseInt(e.dataset?.zoom)||l.zoom||14;l.center=b??{lat:0,lng:0},l.zoom=f,l.mapId=l.mapId||`map-${R(10)}`;let r=new a.Map(t,l),d=new a.InfoWindow({maxWidth:500}),E=w?new a.DirectionsService:null,c=w?new a.DirectionsRenderer({map:r,suppressMarkers:!0}):null,h=0,m=0,g=0;if(c&&c.setMap(r),p.forEach(i=>{let v=new a.marker.PinElement({background:i.pinColor,glyphColor:"#fff",borderColor:"rgb(0 0 0 / 50%)"}),u=new a.marker.AdvancedMarkerElement({position:{lat:i.lat,lng:i.lng},map:r,draggable:!1,content:v.element,zIndex:-20});c&&!y&&u.addListener("click",()=>{if(h++,h==1){m=u.position;return}h==3&&(c.set("directions",null),m=g,h=2),g=u.position,X(E,c,m,g)}),i.html&&u.addListener("click",()=>{d.setContent(i.html),d.open({anchor:u,map:r})}),y&&u.addListener("click",()=>{window.addressElement=i.element,["mousedown","mouseup"].forEach(x=>i.element.dispatchEvent(new Event(x,{bubbles:!0})))}),n.push(u)}),s>1){let i=new a.LatLngBounds;n.forEach(v=>{i.extend(v.getPosition())}),r.fitBounds(i),setTimeout(()=>{r.getZoom()>f&&r.setZoom(f)},200)}document.dispatchEvent(new CustomEvent("initializedJonnittoMaps",{detail:{element:e,service:o,map:r,markers:n}})),$.push(r)}async function z(){let{service:e,effect:o}=await M(),t=e.options.apiKey;if(!t){console.error("No API key found");return}let n=["maps","marker"];e?.options?.enableDirections&&n.push("places"),D({key:t,v:"weekly",libraries:n}),await Promise.all(n.map(s=>k(s))),P(()=>{L(o),A(e.name,s=>{K({element:s,service:e})})})}var C=z;function X(e,o,t,n){e.route({origin:t,destination:n,travelMode:a.TravelMode.DRIVING},function(p,s){s==a.DirectionsStatus.OK&&o.setDirections(p)})}C();
