{
  "version": 3,
  "sources": ["../../Private/Assets/Backend.js"],
  "sourcesContent": ["const elementClassName = \"jonnitto-maps\";\nconst nodes = [...document.querySelectorAll(\".neos-contentcollection\")];\nconst config = { childList: true };\n\nconst callback = (mutationList) => {\n    let fireEvent = false;\n    for (const mutation of mutationList) {\n        const { type, addedNodes } = mutation;\n        if (type !== \"childList\") {\n            continue;\n        }\n        [...addedNodes].forEach((node) => {\n            const isElement = node.classList.contains(elementClassName);\n            const element = isElement ? node : node.querySelector(`.${elementClassName}`);\n            if (element || !element.classList.contains(`${elementClassName}--done`)) {\n                fireEvent = true;\n            }\n        });\n    }\n    if (fireEvent) {\n        window.dispatchEvent(new Event(\"jonnitto-maps:init\"));\n    }\n};\n\n// Create an observer instance linked to the callback function\nconst observer = new MutationObserver(callback);\n\n// Start observing the target node for configured mutations\nnodes.forEach((node) => observer.observe(node, config));\n"],
  "mappings": "AAAA,IAAMA,EAAmB,gBACnBC,EAAQ,CAAC,GAAG,SAAS,iBAAiB,yBAAyB,CAAC,EAChEC,EAAS,CAAE,UAAW,EAAK,EAE3BC,EAAYC,GAAiB,CAC/B,IAAIC,EAAY,GAChB,QAAWC,KAAYF,EAAc,CACjC,GAAM,CAAE,KAAAG,EAAM,WAAAC,CAAW,EAAIF,EACzBC,IAAS,aAGb,CAAC,GAAGC,CAAU,EAAE,QAASC,GAAS,CAE9B,IAAMC,EADYD,EAAK,UAAU,SAAST,CAAgB,EAC9BS,EAAOA,EAAK,cAAc,IAAIT,CAAgB,EAAE,GACxEU,GAAW,CAACA,EAAQ,UAAU,SAAS,GAAGV,CAAgB,QAAQ,KAClEK,EAAY,GAEpB,CAAC,CACL,CACIA,GACA,OAAO,cAAc,IAAI,MAAM,oBAAoB,CAAC,CAE5D,EAGMM,EAAW,IAAI,iBAAiBR,CAAQ,EAG9CF,EAAM,QAASQ,GAASE,EAAS,QAAQF,EAAMP,CAAM,CAAC",
  "names": ["elementClassName", "nodes", "config", "callback", "mutationList", "fireEvent", "mutation", "type", "addedNodes", "node", "element", "observer"]
}
