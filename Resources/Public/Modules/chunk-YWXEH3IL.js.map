{
  "version": 3,
  "sources": ["../../Private/Assets/Modules/Global.mjs"],
  "sourcesContent": ["const inBackend = window.name == \"neos-content-main\";\nconst DOCUMENT = document;\nconst HTML = DOCUMENT.documentElement;\nconst darkModePreference = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\nfunction getAddresses(element) {\n    return [...element.querySelectorAll(\".carbon-geomap-coordinate\")]\n        .map((element) => {\n            const dataset = element.dataset;\n            const coordinate = JSON.parse(dataset?.coordinate || null);\n            if (!coordinate) {\n                return null;\n            }\n            return {\n                element,\n                html: element.outerHTML,\n                popup: !!element.innerHTML,\n                lat: coordinate.lat,\n                lng: coordinate.lng,\n                pinColor: dataset?.pinColor || \"red\",\n            };\n        })\n        .filter((element) => element !== null);\n}\n\nfunction createIcon(color) {\n    return {\n        html: `<svg version=\"1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 149 178\"><path fill=\"${color}\" stroke=\"#FFF\" stroke-width=\"6\" stroke-miterlimit=\"10\" d=\"M126 23l-6-6A69 69 0 0 0 74 1a69 69 0 0 0-51 22A70 70 0 0 0 1 74c0 21 7 38 22 52l43 47c6 6 11 6 16 0l48-51c12-13 18-29 18-48 0-20-8-37-22-51z\"/><circle fill=\"${color}\" cx=\"74\" cy=\"75\" r=\"61\"/><circle fill=\"#FFF\" cx=\"74\" cy=\"75\" r=\"30\"/></svg>`,\n        iconAnchor: [12, 32],\n        iconSize: [25, 30],\n        popupAnchor: [0, -28],\n    };\n}\n\nfunction getMapCanvas(element) {\n    return element.querySelector(\".carbon-geomap__canvas\");\n}\n\nfunction initFrontend(name, callback) {\n    [...DOCUMENT.querySelectorAll(`.carbon-geomap.jonnitto-maps--${name.toLowerCase()}`)].forEach(callback);\n}\n\nfunction getStyleType(style) {\n    if (typeof style === \"string\") {\n        return style;\n    }\n    if (!checkIfDarkAndLight(style)) {\n        return style?.light || style?.dark;\n    }\n    const basedOnClass = checkIfBasedOnClass(style);\n    return checkIfDark(basedOnClass) ? style.dark : style.light;\n}\n\nfunction getStyleUrl(styleTemplate, style) {\n    if (styleTemplate) {\n        return styleTemplate.replaceAll(\"{{STYLE}}\", getStyleType(style));\n    }\n    return getStyleType(style);\n}\n\nfunction listenToDarkModeChange(callback, basedOnClass, check = true) {\n    if (!check || typeof callback !== \"function\") {\n        return;\n    }\n\n    if (basedOnClass) {\n        const observer = new MutationObserver((mutationList) => {\n            mutationList.forEach(function (mutation) {\n                if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n                    callback();\n                }\n            });\n        });\n\n        observer.observe(HTML, {\n            attributes: true,\n        });\n        return;\n    }\n\n    darkModePreference.addEventListener(\"change\", callback);\n}\n\nfunction checkIfDark(basedOnClass) {\n    return !!((!basedOnClass && darkModePreference.matches) || (basedOnClass && HTML.classList.contains(\"dark\")));\n}\n\nfunction checkIfBasedOnClass(object) {\n    return object?.basedOn === \"class\";\n}\nfunction checkIfDarkAndLight(object) {\n    return !!(typeof object === \"object\" && object?.light && object?.dark);\n}\n\nfunction darkLightModeEffect(effect) {\n    if (!checkIfDarkAndLight(effect)) {\n        return;\n    }\n\n    const activateEffect = () => {\n        const style = checkIfDark(basedOnClass) ? effect.dark : effect.light;\n        [...document.querySelectorAll(\".jonnitto-maps .carbon-geomap__canvas\")].forEach((element) => {\n            element.dataset.effect = style;\n        });\n    };\n    // Change the effect on dark / light mode\n    const basedOnClass = checkIfBasedOnClass(effect);\n    listenToDarkModeChange(activateEffect, basedOnClass);\n    activateEffect();\n}\n\nasync function getOptions() {\n    return await fetch(\"/maps-settings.json\").then((response) => response.json());\n}\n\nfunction filterObject(object) {\n    return Object.fromEntries(Object.entries(object).filter(([_, value]) => value != null));\n}\n\nfunction runCallbackAndRegisterTurbo(callback) {\n    callback();\n\n    document.addEventListener(\"turbo:load\", ({ detail }) => {\n        // It is not the first load\n        if (detail.timing?.visitStart) {\n            callback();\n        }\n    });\n}\n\nexport {\n    inBackend,\n    getAddresses,\n    createIcon,\n    getMapCanvas,\n    initFrontend,\n    getStyleUrl,\n    listenToDarkModeChange,\n    checkIfDark,\n    checkIfBasedOnClass,\n    checkIfDarkAndLight,\n    darkLightModeEffect,\n    getStyleType,\n    getOptions,\n    filterObject,\n    runCallbackAndRegisterTurbo,\n};\n"],
  "mappings": "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",
  "names": ["inBackend", "DOCUMENT", "HTML", "darkModePreference", "getAddresses", "element", "dataset", "coordinate", "createIcon", "color", "getMapCanvas", "initFrontend", "name", "callback", "getStyleType", "style", "checkIfDarkAndLight", "basedOnClass", "checkIfBasedOnClass", "checkIfDark", "getStyleUrl", "styleTemplate", "listenToDarkModeChange", "check", "mutationList", "mutation", "object", "darkLightModeEffect", "effect", "activateEffect", "getOptions", "response", "filterObject", "_", "value", "runCallbackAndRegisterTurbo", "detail"]
}
